<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[个人markdwon常用语法]]></title>
      <url>http://chrisp7.github.io/2017/02/16/%E4%B8%AA%E4%BA%BAmarkdwon%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
      <content type="html"><![CDATA[<h1 id="markdown常用语法"><a href="#markdown常用语法" class="headerlink" title="markdown常用语法"></a>markdown常用语法</h1><h2 id="1、-用-区分标题级别"><a href="#1、-用-区分标题级别" class="headerlink" title="1、 用#区分标题级别"></a>1、 用<code>#</code>区分标题级别</h2><p>markdown支持6级标题，一级标题是一个<code>#</code>，以此类推，六级标题就是六个<code>#</code></p>
<h2 id="2、强调"><a href="#2、强调" class="headerlink" title="2、强调"></a>2、强调</h2><p>两个 <code>*</code> 或者 <code>-</code> 代表加粗，一个 <code>*</code> 或 <code>-</code> 表示斜体</p>
<p>效果：<strong>加粗文本</strong>，<em>斜体文本</em></p>
<h2 id="3、无序-amp-有序列表"><a href="#3、无序-amp-有序列表" class="headerlink" title="3、无序&amp;有序列表"></a>3、无序&amp;有序列表</h2><p>无序列表使用-、+、*<br>有序列表使用数字加英文句点 </p>
<p>效果：</p>
<ul>
<li>A</li>
<li>B</li>
<li>C</li>
</ul>
<ol>
<li>A</li>
<li>B</li>
<li>C</li>
</ol>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>使用引用时用 &gt; </p>
<p>效果：</p>
<blockquote>
<p>这是一段引用</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Technology </category>
            
        </categories>
        
        
        <tags>
            
            <tag> self_learning </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[problem using hexo]]></title>
      <url>http://chrisp7.github.io/2017/02/15/problem-using-hexo/</url>
      <content type="html"><![CDATA[<h1 id="安装hexo所遇问题"><a href="#安装hexo所遇问题" class="headerlink" title="安装hexo所遇问题"></a>安装hexo所遇问题</h1><h2 id="使用脚本-amp-amp-修改权限"><a href="#使用脚本-amp-amp-修改权限" class="headerlink" title="使用脚本&amp;&amp;修改权限"></a>使用脚本&amp;&amp;修改权限</h2><p>对于每一次的部署我们知道都是同样的三个命令。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$hexo</span> clean</div><div class="line"><span class="variable">$hexo</span> generate</div><div class="line"><span class="variable">$hexo</span> deploy</div></pre></td></tr></table></figure></p>
<p>于是可以选择用脚本执行。在我将其写进脚本后发现并不能执行。用l命令查看后只有可读可写权限，光头告诉我要修改权限，让他可执行。很久没用chmod命令，这次光头一提醒发现他的参数确实很容易记，就是(u/g/o)+(r/w/x) 然后跟文件名即可。如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod u+x filename</div></pre></td></tr></table></figure></p>
<hr>
<h2 id="command-not-found-hexo"><a href="#command-not-found-hexo" class="headerlink" title="command not found : hexo"></a>command not found : hexo</h2><p>当我第二天准备重新使用前一天写的脚本来自动化的部署一次我的md文件时，却报出来<code>command not found : hexo</code> 我的第一反应是难道昨天用npm装了那么多次的hexo又没了？于是当我尝试用<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo</div></pre></td></tr></table></figure></p>
<p>他又报错 <code>command not found : npm</code> 此时我已不只是怀疑hexo出了问题。显然npm是和node一起装的，我又用同样的方式检查了一遍node。果然又出现<code>command not found : node</code><br>这才明白是从node这儿出了问题。<br>google之后，发现正常的安装node后他会出现在/usr/local/bin中，然而当我去检查时却发现并没有node。我想起之前是用nvm安装的node，并且之前我有记录hexo的路径，打开hexo所在文件夹果然node就在里面。于是我将node所在目录写进了.bash_profile.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">echo</span> <span class="string">'export PATH=$PATH:$HOME/.nvm/versions/node/v6.9.4/bin'</span> &gt;&gt; <span class="variable">$HOME</span>/.bash_profile</div></pre></td></tr></table></figure></p>
<p>生效过后，发现node可以用了。npm 和 hexo 的问题也都解决了。</p>
<p>由此问题以后看到<code>command not found : xxx</code>便可知道一定是你的PATH里没有放你要用的命令的路径，并且这儿命令如果是后来装的，那么他大多会出现在/usr/local/bin下 因为mac下这个目录就是用来保存你后期用brew或者其他方式下载的可执行命令。</p>
<hr>
<h2 id="hexo-目录"><a href="#hexo-目录" class="headerlink" title="hexo 目录"></a>hexo 目录</h2><p><strong>/Users/CP/.nvm/versions/node/v6.9.4/lib/node_modules/hexo-cli/bin/hexo</strong></p>
<hr>
<h2 id="点击顶部菜单栏时显示404"><a href="#点击顶部菜单栏时显示404" class="headerlink" title="点击顶部菜单栏时显示404"></a>点击顶部菜单栏时显示404</h2><p>当我点击除了home以外的菜单栏按钮时，都出现了404 not found 的问题，页面不存在。经过网上查阅资料，发现是没有新建页面。于是我使用<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new page xxx</div></pre></td></tr></table></figure></p>
<p>依次新建了tags、categories页面。这样就可以访问了。</p>
<blockquote>
<p><strong><code>注意</code></strong><br>这里在新建了页面后，hexo会在对应的目录下新建一个index.md的文件，你需要在front-matter里面加上一行type属性，以指名他对应的menu</p>
</blockquote>
<hr>
<h2 id="引用图片"><a href="#引用图片" class="headerlink" title="引用图片"></a>引用图片</h2><p>对于文章中只有少量图片的情况，只需将图片放在source/images文件夹即可。然后使用 <code>![] (/images/image.jpg)</code> 引用图片即可<br>对于有多张图片的情况，建议集中管理。首先先到_config.yml 设置</p>
<blockquote>
<p>_config.yml<br>post_asset_folder: true</p>
</blockquote>
<p>此时资源文件管理功能打开，以后每次用hexo new [layout] “xxx” 新建文章时，都会在你新建的markdown文件同一个文件夹下新建一个和你命名的markdown文件同名的资源文件夹，然后与这篇文章所有相关的资源文件都可以放在这里，然后用标签插件进行引用。如：</p>
<blockquote>

</blockquote>
<hr>
<h2 id="结束引用"><a href="#结束引用" class="headerlink" title="结束引用"></a>结束引用</h2><p>如果想结束引用，只要连按两下回车就行。</p>
]]></content>
      
        <categories>
            
            <category> Technology </category>
            
        </categories>
        
        
        <tags>
            
            <tag> self_learning </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
